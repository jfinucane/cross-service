
Crossword Services API:  

Notes
  
  in bash shell => export HOST=jimrails.com 

Words: 

  Default dictionary is sowpods; to override:         &dictionary=test
  Default start word is 0; to override:               &offset=500 
  Default 200 words returned at a time;  to override:   &page_size=1000

  Services
    curl $HOST/words.json                    - returns -           list
    curl anagrams.$HOST/any_word.json        - returns -           list
    curl startswith.$HOST/any_word.json      - returns -           list
    curl contains.$HOST/any_word.json        - returns -           list
    curl suggestions.$HOST/any_word.json     - returns -           hash
    curl autocomplete.$HOST/any_word.json    - returns -           list 

    Examples
      jimrails.com/words.json&offset=500 lists words starting at offset 500
      
      anagrams.jimrails.com/demo.json lists anagrams of "demo"
        => ["mode","dome","demo"]
      
      anagrams.jimrails.com/demo.json&dictionary=test lists anagrams of demo in test dictionary

Dictionaries

  Get list of dictionaries
    curl $HOST/dictionaries.json
    # the dictionary 'sowpops' is an intersection of the scrabble dictionary and popular words

  Ruby to add a new dictionary
    require 'curb'
    host = 'www.jimrails.com/dictionaries.json'
    Curl.post host, {:name=>'my_test', :attribution => 'my test dictionary'}

  Ruby to add word to dictionary
    require 'curb'
    host = "www.jimrails.com/words.json'
    Curl.post host, {:dictionary=>'test', :word => 'wordxyz'}


Next steps @wip

  10/25 sowpods is the only populated dictionary.

  Compute all fully populated rectangular crosswords
  https://github.com/jfinucane/crossword

  Extend cross-service:   Add retrieval of rectangular crosswords by word 
  https://github.com/jfinucane/cross-service

  suggestions - hash, key is length of suggestion (2..word.length+1)

  autocomplete - ordered by popularity.

Icebox

  levenhoods - levenshtein neighborhoods

  autocorrect - autocomplete with corrections









